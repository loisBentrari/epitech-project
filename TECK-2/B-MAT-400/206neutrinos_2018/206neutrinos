#!/usr/bin/env python3

import sys
import numpy
import time
from math import factorial, exp, sqrt, pi


def Try_Int(s):
    try:
        int(s)
        return True
    except ValueError:
        return False

def check_error_parsing():
	if len(sys.argv) != 5:
	    exit(84)
	if (Try_Int(sys.argv[1]) == False or int(sys.argv[1]) < 0):
		print("number of values as to be an positiv int")
		exit(84)
	if (Try_Int(sys.argv[2]) == False) or int(sys.argv[2]) < 0:
		print("arithmetic mean as to be an int")
		exit(84)
	if (Try_Int(sys.argv[3]) == False or int(sys.argv[3]) < 0):
		print("harmonic mean as to be an int")
		exit(84)
	if (Try_Int(sys.argv[4]) == False or int(sys.argv[4]) < 0):
		print("standard deviation as to be an int")
		exit(84)

def add_harimetic_mean(Mold, a, n):
	mean = Mold + ((a - Mold) / n)
	return mean

def add_harmonic_mean(Hold, value, n):
	if Hold <= 0:
		exit(84)
	mean = n / ((1 / value) + ((n - 1) / Hold))
	return mean

def add_quadratic_mean(q, value, n):
	mean = sqrt(((pow(q, 2) * (n - 1)) + pow(value, 2)) / n)
	return mean

def add_standard_deviation(Mold, value, n, stdOld):
	std = ((n - 2) / (n - 1))*pow(stdOld, 2) + (1 / n * pow((value - Mold), 2))
	return sqrt(std)

def printer(n, a, h, sd, q):
	print("    Number of values:   {}".format(n))
	print("    Standard deviation: {:.2f}".format(sqrt(pow(q, 2) - pow(a,2))))
	print("    Arithmetic mean:    {:.2f}".format(a))
	print("    Root mean square:   {:.2f}".format(q))
	print("    Harmonic mean:      {:.2f}\n".format(h))

def loop(n, a, h, sd, q):
	while(1):
		print("Enter next value :", end='')
		new=  input()
		if new == "END":
			exit(0)
		if Try_Int(new) == False:
			print("number of values as to be an int")
			exit(84)
		n += 1
		new = int(new)
		a.append(add_harimetic_mean(a[-1], new, n))
		h.append(add_harmonic_mean(h[-1], new, n))
		sd.append(add_standard_deviation(a[-1], new, n, sd[-1]))
		q.append(add_quadratic_mean(q[-1], new, n))
		printer(n, a[-1], h[-1], sd[-1], q[-1])


if len(sys.argv) == 2 and sys.argv[1] == "-h":
	print("USAGE")
	print("\t./206neutrinos n a h sd\n")
	print("DESCRIPTION")
	print("\tn\nnumber of values")
	print("\ta\tarithmetic mean")
	print("\th\tharmonic mean")
	print("\tsd\tstandard deviation")
	exit(0)

check_error_parsing()

n = int(sys.argv[1])
a = []
h = []
sd = []
q = []

a.append(int(sys.argv[2]))
h.append(int(sys.argv[3]))
sd.append(int(sys.argv[4]))
q.append(sqrt(pow(int(sys.argv[4]), 2) + pow(int(sys.argv[2]), 2)))

loop(n ,a, h, sd, q)
